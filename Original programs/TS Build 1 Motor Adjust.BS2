' TS Build 1 Motor Adjust.BS2
' {$STAMP BS2}
' {$PBASIC 2.5}
'
'********************* Ring Test Program ************************************
'
' Copyright Louis A. Lippincott 2013 All Rights Reserved
'
' Created by Lou Lippincott 6/21/13
'
'*********************************************************************************
'
' This program outputs a HALT signal to both motors. Adjust both motors until they stop turning.
'
' This program also blinks the red LED and beeps the beeper before starting the test.
'
'*************************************************************************************

' -----[ I/O Definitions ]-------------------------------------------------

Speaker      PIN        1                       ' Speaker
RedLED       PIN        0                       ' Red LED used to show status

LIrOut       PIN        4                       ' left IR LED output
LIRIn        PIN        11                      ' left IR sensor input
RIROut       PIN        15                      ' right IR LED output
RIRIn        PIN        14                      ' right IR sensor input

LMotor       PIN        13                      ' left servo motor
RMotor       PIN        12                      ' right servo motor

LLinePower   PIN        10                      ' left line sensor power
LLineIn      PIN        9                       ' left line sensor input
RLinePower   PIN        7                       ' right line sensor power
RLineIn      PIN        8                       ' right line sensor input

' -----[ Constants ]-------------------------------------------------------

LStop        CON        850                     ' left motor stop
RStop        CON        850                     ' right motor stop

' -----[ Variables ]-------------------------------------------------------

Run_Count    VAR        Byte                    ' Count how many matches we've played between power cycles
Delay_Count  VAR        Byte                    ' Count how many seconds since reset button

' -----[ EEPROM Data ]-----------------------------------------------------

RunCount    DATA       $00                     ' Run counter

'*****************************************************************************************
' -----[ Initialization ]--------------------------------------------------
'*****************************************************************************************
'************************** DO NOT CHANGE CODE HERE! (Rule Violation!) *******************
'*****************************************************************************************
Reset:
  LOW LMotor                                   ' Make Motor pins outputs
  LOW RMotor

  READ RunCount, Run_Count                     ' Read Run Counter
  Run_Count = Run_Count + 1                    ' Ran one more time
  WRITE RunCount, Run_Count                    ' Store it back into NVRAM
  Run_Count = Run_Count & 1                    ' Make it Odd or Even
  IF (Run_Count = 1) THEN END                  ' Run every other time reset button is pushed

Start_Delay:                                   ' five second delay
  FOR Delay_Count = 1 TO 5
    HIGH RedLED                                ' show active
    PAUSE 700
    INPUT RedLED                               ' blink each second
    FREQOUT Speaker, 300, 4000, 3300           ' beep each second
  NEXT
'*****************************************************************************************
'*****************************************************************************************


' -----[ Program Code ]----------------------------------------------------

Main:
    PULSOUT LMotor, LStop
    PULSOUT RMotor, RStop
    PAUSE 20
  GOTO Main
